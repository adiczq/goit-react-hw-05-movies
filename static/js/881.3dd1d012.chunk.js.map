{"version":3,"file":"static/js/881.3dd1d012.chunk.js","mappings":"uMACA,EAAwB,yB,SCoBxB,EAhBkB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,yBACE,SAAC,KAAD,CACEC,UAAWC,EACXC,GAAE,kBAAaL,EAAKM,IACpBC,MAAO,CAAEC,KAAMP,GAHjB,SAKGD,EAAKS,eAAiBT,EAAKU,kBAInC,C,8IClBD,EAAuB,qBAAvB,EAAmD,qBAAnD,EAAgF,sBAAhF,EAA+G,uB,SCiE/G,EA1De,WACb,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCP,EAAAA,EAAAA,WAAS,GAAjD,eAAOQ,EAAP,KAAqBC,EAArB,KA8BA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQL,EAAaM,IAAI,SAC3BD,GACFE,EAAAA,EAAA,+BAAuCF,EAAvC,MACGG,MAAK,SAAAC,GACuB,IAAvBA,EAAIC,QAAQC,OACdR,GAAgB,GAEhBA,GAAgB,GAElBL,GAAgB,OAAIW,EAAIC,SACzB,IACAE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAEjB,GAAE,CAACb,KAGF,iCACE,kBAAMd,UAAWC,EAAU6B,SA5BV,SAAAC,GAEnB,GADAA,EAAEC,iBACmB,KAAjBvB,EAAMwB,OACR,OAAOC,EAAAA,OAAAA,QAAe,oBAGxBnB,EAAgB,CAAEoB,MAAO1B,IACzBC,EAAS,GACV,EAoBG,WACE,kBACEV,UAAWC,EACXmC,KAAK,OACLC,KAAK,cACL5B,MAAOA,EACP6B,SApCa,SAAAP,GAAC,OAAIrB,EAASqB,EAAEQ,cAAc9B,MAA7B,KAsChB,mBAAQT,UAAWC,EAAnB,SAA+B,eAEjC,eAAID,UAAWC,EAAf,SACGU,EAAa6B,KAAI,SAAArB,GAAK,OACrB,SAACsB,EAAA,EAAD,CAA0B5C,KAAMsB,GAAhBA,EAAMhB,GADD,MAIxBa,GACC,yBAAG,sCAAoCF,EAAaM,IAAI,SAAS,QAC/D,OAGT,C,2GC3DYsB,EAAU,mCAAG,WAAMP,GAAN,uFACDQ,MAAM,GAAD,OAJb,+BAIa,OAAeR,EAAf,mBAHlB,qCAEc,YAClBS,EADkB,QAEXC,GAFW,yCAGfD,EAASE,QAHM,uBAKXC,QAAQC,OAAO,IAAIC,MAAM,UALd,mFAAH,sDAQvBP,EAAWQ,UAAY,CACrBf,MAAOgB,IAAAA,OAAAA,W","sources":["webpack://react-homework-template/./src/components/MovieItem/MovieItem.module.css?431a","components/MovieItem/MovieItem.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie\":\"MovieItem_movie__FIDz9\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './MovieItem.module.css';\n\nconst MovieItem = ({ item }) => {\n  const location = useLocation();\n\n  return (\n    <li>\n      <Link\n        className={css.movie}\n        to={`/movies/${item.id}`}\n        state={{ from: location }}\n      >\n        {item.original_name || item.original_title}\n      </Link>\n    </li>\n  );\n};\n\nexport default MovieItem;\n\nMovieItem.propTypes = {\n  item: PropTypes.object.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Movies_list__hqYjd\",\"form\":\"Movies_form__4ow+Z\",\"input\":\"Movies_input__KrUqs\",\"button\":\"Movies_button__GcIka\"};","import React from 'react';\nimport MovieItem from 'components/MovieItem/MovieItem';\nimport { Notify } from 'notiflix';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport * as API from '../../services/api';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [value, setValue] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const [notification, setNotification] = useState(false);\n\n  const handleChange = e => setValue(e.currentTarget.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (value.trim() === '') {\n      return Notify.warning('Write a request!');\n    }\n\n    setSearchParams({ query: value });\n    setValue('');\n  };\n\n  useEffect(() => {\n    const movie = searchParams.get('query');\n    if (movie) {\n      API.fetchQuery(`3/search/movie?query=${movie}&`)\n        .then(res => {\n          if (res.results.length === 0) {\n            setNotification(true);\n          } else {\n            setNotification(false);\n          }\n          setSearchResult([...res.results]);\n        })\n        .catch(error => console.log(error));\n    }\n  }, [searchParams]);\n\n  return (\n    <>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"searchMovie\"\n          value={value}\n          onChange={handleChange}\n        />\n        <button className={css.button}>Search</button>\n      </form>\n      <ul className={css.list}>\n        {searchResult.map(movie => (\n          <MovieItem key={movie.id} item={movie} />\n        ))}\n      </ul>\n      {notification ? (\n        <p>There are no movies with the name \"{searchParams.get('query')}\".</p>\n      ) : null}\n    </>\n  );\n};\n\nexport default Movies;\n","import PropTypes from 'prop-types';\n\nconst BASE_URl = 'https://api.themoviedb.org/';\nconst KEY = '432d0a09cce951285c1f7d7c54617eee';\n\nexport const fetchQuery = async query => {\n  const response = await fetch(`${BASE_URl}${query}api_key=${KEY}`);\n  if (response.ok) {\n    return response.json();\n  }\n  return await Promise.reject(new Error('error'));\n};\n\nfetchQuery.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n"],"names":["item","location","useLocation","className","css","to","id","state","from","original_name","original_title","useState","value","setValue","searchResult","setSearchResult","useSearchParams","searchParams","setSearchParams","notification","setNotification","useEffect","movie","get","API","then","res","results","length","catch","error","console","log","onSubmit","e","preventDefault","trim","Notify","query","type","name","onChange","currentTarget","map","MovieItem","fetchQuery","fetch","response","ok","json","Promise","reject","Error","propTypes","PropTypes"],"sourceRoot":""}